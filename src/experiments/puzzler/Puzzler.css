.puzzler-container {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  height: 100vh;
  width: 100vw;
  overflow: hidden;
  position: relative;
  background-color: var(--background-color);
  color: var(--text-color);
  box-sizing: border-box;
  padding: 20px;
  min-height: 400px;
}

.puzzler-content {
  width: 100%;
  height: 100%;
  max-width: 100%; /* Changed from 1000px to allow full window use */
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}

/* Drop area styling */
.puzzler-drop-area {
  border: 2px solid #e0e0e0;
  border-radius: 8px;
  padding: 20px;
  text-align: center;
  min-height: 200px;
  display: flex;
  justify-content: center;
  align-items: center;
  cursor: pointer;
  position: relative;
  transition: all 0.2s ease;
  flex-direction: column;
  background-color: white;
  width: 100%;
  max-width: 600px; /* Add max-width to keep drop area reasonable size */
}

.puzzler-drop-area.dragging {
  border-color: var(--primary-color);
  background-color: rgba(var(--primary-rgb), 0.05);
}

.puzzler-drop-area.has-image {
  height: auto;
  padding: 0;
  overflow: hidden;
}

.puzzler-drop-prompt {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  color: #666;
}

.puzzler-drop-prompt p {
  font-size: 18px;
  margin-bottom: 5px;
}

.puzzler-drop-prompt .drop-subtitle {
  font-size: 15px;
  margin-top: 5px;
  opacity: 0.7;
}

.puzzler-drop-icon {
  margin-bottom: 10px;
  color: #666;
}

/* Puzzle area - removing borders and backgrounds */
.puzzle-area {
  position: absolute; /* Changed from relative to absolute */
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  margin: 0; /* Removed margin */
  background: none; /* Removed background */
  border: none; /* Removed border */
  overflow: visible;
  width: 100%;
  height: 100%;
  /* Removed max-width, max-height, and min-height constraints */
}

.puzzle-frame {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  border: 2px dashed #999; /* Changed to dashed border */
  background: none; /* Removed background */
}

/* Puzzle pieces - simple square shapes */
.puzzle-piece {
  position: absolute;
  cursor: move;
  cursor: grab;
  background-repeat: no-repeat;
  z-index: 5;
  transition: transform 0.1s ease, box-shadow 0.2s ease;
  box-sizing: border-box;
  
  /* Clean edges with a subtle border */
  border: 1px solid rgba(255, 255, 255, 0.3);
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2);
}

/* Hover and drag effects */
.puzzle-piece:hover {
  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.3);
  z-index: 20;
  transform: scale(1.02);
}

.puzzle-piece.dragging {
  cursor: grabbing;
  z-index: 100;
  box-shadow: 0 8px 20px rgba(0, 0, 0, 0.4);
  opacity: 0.95;
  transform: scale(1.05);
}

.puzzle-piece.correct {
  cursor: default;
  box-shadow: none;
  transition: all 0.3s ease;
  z-index: 1;
  transform: scale(1);
}

/* Upload icon button (after image upload) - repositioned to left side */
.upload-icon-button {
  position: fixed;
  top: 50%;
  left: 20px; /* Moved from right to left side */
  transform: translateY(-50%); /* Center vertically */
  width: 50px;
  height: 50px;
  background: rgba(255, 255, 255, 0.9);
  border-radius: 50%;
  display: flex;
  justify-content: center;
  align-items: center;
  cursor: pointer;
  border: 1px solid #ddd;
  box-shadow: 0 3px 8px rgba(0, 0, 0, 0.2);
  z-index: 200; /* Ensure it's above all puzzle pieces */
  transition: all 0.2s ease;
  pointer-events: auto !important; /* Force pointer events */
}

.upload-icon-button:hover {
  background: white;
  transform: translateY(-50%) scale(1.1);
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.25);
}

/* Loading/processing states */
.processing-indicator {
  position: fixed; /* Changed from absolute to fixed */
  top: 0;
  left: 0;
  right: 0;
  background-color: rgba(0, 0, 0, 0.7);
  color: white;
  padding: 10px;
  text-align: center;
  z-index: 200; /* Increased from 10 to ensure visibility above all elements */
  display: flex;
  flex-direction: column;
  align-items: center;
}

.progress-bar {
  height: 6px;
  width: 100%;
  background-color: rgba(255, 255, 255, 0.2);
  border-radius: 3px;
  overflow: hidden;
  margin-bottom: 6px;
}

.progress-fill {
  height: 100%;
  background-color: #47ceff;
  transition: width 0.3s ease-out;
}

.processing-text {
  font-size: 14px;
  width: 100%;
}

/* Completion message */
.completion-message {
  position: fixed; /* Changed from absolute to fixed */
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  background-color: rgba(255, 255, 255, 0.9);
  border-radius: 8px;
  padding: 20px 30px;
  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.15);
  z-index: 50;
  animation: fadeIn 0.5s ease;
  text-align: center;
}

@keyframes fadeIn {
  from { opacity: 0; }
  to { opacity: 1; }
}

/* Just for debugging - add this to help visualize piece positions */
.debug-coordinates {
  position: absolute;
  bottom: 0;
  right: 0;
  background: rgba(0, 0, 0, 0.5);
  color: white;
  font-size: 10px;
  padding: 2px 4px;
  pointer-events: none;
}

/* Reset button for puzzle - convert to icon button like upload button */
.reset-button {
  position: fixed;
  top: 50%;
  right: 20px;
  transform: translateY(-50%);
  width: 50px;
  height: 50px;
  background: rgba(255, 255, 255, 0.9);
  border-radius: 50%;
  display: flex;
  justify-content: center;
  align-items: center;
  cursor: pointer;
  border: 1px solid #ddd;
  box-shadow: 0 3px 8px rgba(0, 0, 0, 0.2);
  z-index: 200;
  pointer-events: auto !important;
  transition: all 0.2s ease;
  color: #666;
}

.reset-button:hover {
  background: white;
  transform: translateY(-50%) scale(1.1);
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.25);
  color: #ff3333; /* Red hover color */
}

/* Responsive adjustments */
@media (max-width: 768px) {
  .reset-button {
    width: 40px;
    height: 40px;
  }
  
  .upload-icon-button {
    width: 40px;
    height: 40px;
  }
}

/* Confetti styling */
.confetti-container {
  position: absolute;
  z-index: 1000;
  pointer-events: none;
}

.confetti-particle {
  position: absolute;
  will-change: transform;
  border-radius: 50%;
  animation: confetti-fade-out 1s ease-out forwards;
}

@keyframes confetti-fade-out {
  0% {
    opacity: 1;
    transform: scale(1);
  }
  100% {
    opacity: 0;
    transform: scale(0.3);
  }
}